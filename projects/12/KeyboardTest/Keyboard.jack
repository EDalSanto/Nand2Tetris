// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyboardRAMSegment;

    /** Initializes the keyboard. */
    function void init() {
      // set where RAM segment is
      let keyboardRAMSegment = 24576;

      return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      var int asciiValue;

      if (~(Memory.peek(keyboardRAMSegment) = 0)) {
        let asciiValue = Memory.peek(keyboardRAMSegment);
        return asciiValue;
      } else {
        return 0;
      }
    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
      var char keyPressed;

      do Output.printChar(Memory.peek(keyboardRAMSegment));

      while (keyPressed = 0) {
        let keyPressed = Memory.peek(keyboardRAMSegment);
      }

//      do Output.printChar(keyPressed);

      return keyPressed;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
      var char keyPressed;
      var String text;

      let text = String.new(10);

      do Output.printString(message);

      while (true) {
        let keyPressed = Keyboard.readChar();

        if (keyPressed = String.newLine()) {
          do Output.printString(text);
          return text;
        }

        if (keyPressed = String.backSpace()) {
          do text.eraseLastChar();
        } else {
          do text.appendChar(keyPressed);
        }
      }

      return text; // doing this to appease compiler
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
      var char keyPressed;
      var String text;

      do Output.printString(message);

      while (~(keyPressed = String.newLine())) {
        let keyPressed = Memory.peek(keyboardRAMSegment);

        if (keyPressed = String.backSpace()) {
          do text.eraseLastChar();
        } else {
          do text.appendChar(keyPressed);
        }
      }

      return text;
    }
}
