class Loan {
  field int principle, monthlyPayment, monthsTillPayoff;
  field Fraction interestRate;

  constructor Loan new(int principleAmount, int interestRatePercent) {
    let principle = principleAmount;
    let interestRate = Fraction.new(interestRatePercent, 100);

    return this;
  }

  method void setMonthlyPayment(int amount) {
    let monthlyPayment = amount;
    //do updateMonthsTillPayoffBasedOffPaymentAmount();

    return;
  }

  method void setMonthsTillPayoff(int months) {
    let monthsTillPayoff = months;
    do updateMonthlyPaymentBasedOffNewMonthsTillPayoff();

    return;
  }

  method void updateMonthlyPaymentBasedOffNewMonthsTillPayoff() {
    var int newMonthlyPayment;
    var int newMonthlyPaymentNumerator;
    var int newMonthlyPaymentDenominator;

    // formula:  https://en.wikipedia.org/wiki/Mortgage_calculator#Monthly_payment_formula
    do Output.printInt((interestRate * principle) * MathUtil.power((1 + interestRate), monthsTillPayoff));
    do Output.println();
    let newMonthlyPaymentNumerator = (interestRate * principle) * MathUtil.power((1 + interestRate), monthsTillPayoff);
    let newMonthlyPaymentDenominator = MathUtil.power((1 + interestRate), monthsTillPayoff) - interestRate;
    let newMonthlyPayment = newMonthlyPaymentNumerator / newMonthlyPaymentDenominator;

    let monthlyPayment = newMonthlyPayment;

    return;
  }

  method void updateMonthsTillPayoffBasedOffPaymentAmount() {
    return;
  }

  method void print() {
    do Output.printString("Principle: ");
    do Output.printInt(principle);
    do Output.println();
    do Output.printString("Interest Rate: ");
    do interestRate.print(); // fraction
    do Output.println();
    do Output.printString("Number of Monthly Payments: ");
    do Output.printInt(monthsTillPayoff);
    do Output.println();
    do Output.printString("Monthly Payment: ");
    do Output.printInt(monthlyPayment);

    return;
  }
}
