// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    /* Find if should load */
    Or(a=reset, b=load, out=shouldLoadTmp);
    Or(a=shouldLoadTmp, b=inc, out=shouldLoad);

    /* create other potential values to load */
    Xor16(x=in, y=in, out=zero);
    Inc16(in=outCopy, out=incremented);

    /* Find which value to load -> overwrite previous if present */
    Mux16(a=incremented, b=incremented, sel=inc, out=v1);
    Mux16(a=v1, b=in, sel=load, out=v2);
    Mux16(a=v2, b=zero, sel=reset, out=valueToLoad);

    Register(in=valueToLoad, load=shouldLoad, out=out, out=outCopy);
}
